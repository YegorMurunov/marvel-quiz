'use strict';

import { shuffle } from './modules/supportFunction.min.js';
import { questions, heroes } from './modules/data.min.js';

document.addEventListener('DOMContentLoaded', e => {
	const body = document.body;

	const dom = {
		test: {
			block: document.getElementById('test'),
			question: document.getElementById('question'),
			questionIndex: document.getElementById('questionIndex'),
			allQuestions: document.getElementById('allQuestions'),
			answers: document.getElementById('answers')
		},
		result: {
			block: document.getElementById('result'),
			resultImg: document.getElementById('resultImg'),
			resultText: document.getElementById('resultText')
		},
		btnStart: document.getElementById('btnStart'),
		banner: document.querySelector('.quiz__banner')
	};

	let result = {};
	let step = 0; // текущий вопрос

	// functions

	// функция start - подготовка к началу
	function start() {
		e.preventDefault();

		result = {};
		step = 0;
		shuffle(questions);

		// рендерим первый вопрос
		render(step);

		// скрываем кнопку
		dom.btnStart.classList.add('hidden');

		// блок с результатом скрываем
		if (+dom.result.block.style.maxHeight.split('')[0] > 0) {
			dom.result.block.style.maxHeight = `0px`;
			dom.result.block.classList.remove('visibleBlock');
		}
	}

	// функция render - рендерит вопрос по индексу
	function render(questionIndex) {
		let question = questions[questionIndex];

		// Заполнение верстки
		dom.test.question.textContent = question.question;
		dom.test.questionIndex.textContent = step + 1;
		dom.test.allQuestions.textContent = questions.length;
		dom.test.answers.innerHTML = '';
		let keys = Object.keys(question.answers);
		shuffle(keys);
		for (let i = 0; i < keys.length; i++) {
			dom.test.answers.innerHTML += `
				<li class="answers__item" data-hero="${keys[i]}">${
				question.answers[keys[i]]
			}</li>
			`;
		}

		// пересчитываем высоту блока
		setTimeout(() => {
			if (step === 0) {
				showBlock(dom.test.block, true);
			}
			showBlock(dom.test.block);
		}, 100);

		dom.test.block.onclick = e => nextQuestion(e.target);
	}

	// функция nextQuestion - записывает результат ответа и вызывает следующий вопрос или вызывает функцию end
	function nextQuestion(element) {
		if (element.tagName === 'LI' && element.getAttribute('data-hero') != null) {
			let hero = element.getAttribute('data-hero');

			// Записываем ответ в result
			result[hero] != undefined ? result[hero]++ : (result[hero] = 0);

			if (step + 1 === questions.length) {
				end();
			} else {
				render(++step);
			}
		}
		return false;
	}

	// функция end - выводит результат
	function end() {
		// блок с вопросами скрываем
		dom.test.block.style.maxHeight = `0px`;
		dom.test.block.classList.remove('visibleBlock');

		// находим клюм максимального значения
		let hero = Object.keys(result).reduce((a, b) =>
			result[a] > result[b] ? a : b
		);

		// Зполняем верстку
		dom.result.resultImg.src = `img/heroes/${heroes[hero].img}`;
		dom.result.resultText.innerHTML = `${heroes[hero].text}`;

		// Делаем блок с результатом видимым
		showBlock(dom.result.block, true);

		dom.btnStart.classList.remove('hidden');
		dom.btnStart.classList.add('again');
		dom.btnStart.textContent = 'Заново';
	}

	dom.btnStart.onclick = start;

	// additionals functions

	function showBlock(element, scrollBottom = false) {
		element.style.maxHeight = `${element.scrollHeight}px`;
		element.classList.add('visibleBlock');

		if (scrollBottom) {
			setTimeout(() => {
				let scrollTarget =
					dom.banner.getBoundingClientRect().top +
					pageYOffset +
					dom.banner.clientHeight;
				window.scrollTo({ top: scrollTarget, behavior: 'smooth' });
			}, 500);
		}
	}

	window.addEventListener('resize', () => {
		// Проверка, какой элемент сейчас показывается (результат или вопросы)
		let visibleBlock = document.querySelector('.visibleBlock');
		if (visibleBlock) {
			if (visibleBlock.className === dom.test.block.className) {
				return showBlock(dom.test.block);
			}
			if (visibleBlock.className === dom.result.block.className) {
				return showBlock(dom.result.block);
			}
			return;
		}
		return;
	});
});
